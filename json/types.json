[ 
   { 
      "name":"isArray",
      "description":"Returns <code>true</code> if value is an Object. Note that JavaScript arrays and functions are objects, while (normal) strings and numbers are not.",
      "content":"function isArray(obj) {\n  return toString.call(obj) === \"[object Array]\";\n} \n\n(function(){ return isArray(arguments); })();\n// false\n\nisArray([1,2,3])\n// true"
   },
   { 
      "name":"isObject",
      "description":"Returns <code>true</code> if value is an Object. Note that JavaScript arrays and functions are objects, while (normal) strings and numbers are not.",
      "content":"function isObject(obj) {\n  return obj === Object(obj);\n}\n\nisObject({});\n// true\n\nisObject(1);\n// false"
   },
   { 
      "name":"isString",
      "description":"Returns <code>true</code> if object is a String.",
      "content":"function isString(obj) {\n  return !!(obj === \"\" || (obj && obj.charCodeAt && obj.substr));\n}\n\nisString(\"name\");\n// true\n\nisString(1);\n// false"
   },
   { 
      "name":"isNumber",
      "description": "",
      "content":"function isNumber(obj) {\n  return !!(obj === 0 || (obj && obj.toExponential && obj.toFixed));\n}\n\nisNumber(8.4 * 5);\n// true\n\nisNumber('1');\n// false"
   },
   { 
      "name":"isNan",
      "description":"",
      "content":"function isNan(obj) {\n  return obj !== obj;\n}\n\nisNan(NaN);\n// true\n\nisNaN(undefined);\n// true\n\nisNan(undefined);\n// false"
   },
   { 
      "name":"isBoolean",
      "description":"",
      "content":"function isBoolean(obj) {\n  return obj === true || obj === false;\n}\n\nisBoolean(null);\n// false"
   },
   { 
      "name":"isNull",
      "description":"",
      "content":"function isNull(obj) {\n  return obj === null;\n}\n\nisNull(null);\n// true\n\nisNull(undefined);\n// false"
   },
   { 
      "name":"isUndefined",
      "description":"",
      "content":"function isUndefined(obj) {\n  return obj === void 0;\n}\n\nisUndefined(window.missingVariable);\n// true\n\nisUndefined(window);\n// false"
   },
   { 
      "name":"isDate",
      "description":"",
      "content":"function isDate(obj) {\n  return !!(obj && obj.getTimezoneOffset && obj.setUTCFullYear);\n}\n\nisDate(new Date());\n// true"
   },
   { 
      "name":"isRegExp",
      "description":"",
      "content":"function isRegExp(obj) {\n  return !!(\n    obj &&\n    obj.test &&\n    obj.exec &&\n    (obj.ignoreCase || obj.ignoreCase === false)\n  );\n}\n\nisRegExp(/test/);\n// true"
   },
   { 
      "name":"isUniform",
      "description":"",
      "content":"function isUniform(arr) {\n  var first = arr[0];\n  for (var i = 1; i < arr.length; i++) {\n    if (arr[i] !== first) {\n      return false;\n    }\n  }\n  return true;\n}\n\nisUniform(['1','1','1'])\n// true\n\nisUniform([1,1,1])\n// true\n\nisUniform(['1','2','3'])\n// false\n\nisUniform([1,2,3])\n// false"
   },
   { 
      "name":"isEven",
      "description":"",
      "content":"function isEven(num) {\n  return num % 2 === 0;\n}\n\nisEven(2);\n// true\n\nisEven(3);\n// false"
   },
   { 
      "name":"isMatch",
      "description":"",
      "content":"function isMatch(object, attrs) {\n  var keys = Object.keys(attrs),\n    length = keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n\nvar obj = {name: 'test', number: 10};\n\nisMatch(obj, {number: 10});\n// true"
   },
   { 
      "name":"isAlphaNumeric",
      "description":"",
      "content":"function isAlphaNumeric(str) {\n  var code = str.charCodeAt(0);\n  if (\n    !(code > 47 && code < 58) && // numeric (0-9)\n    !(code > 64 && code < 91) && // uppercase (A-Z)\n    !(code > 96 && code < 123)\n  ) {\n    // lowercase (a-z)\n    return false;\n  }\n  return true;\n}\n\nisAlphaNumeric('1');\n// true\n\nisAlphaNumeric('a');\n// true\n\nisAlphaNumeric('?');\n// false"
   },
   { 
      "name":"isElement",
      "description":"",
      "content":"function isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n\nisElement(document.body);\n// true"
   },
   { 
      "name":"isPrime",
      "description":"",
      "content":"function isPrime(value) {\n  for (var i = 2; i < value; i++) {\n    if (value % i === 0) {\n      return false;\n    }\n  }\n  return value > 1;\n}\n\nisPrime(5);\n// true\n\nisPrime(4);\n// false"
   },
   { 
      "name":"isArguments",
      "description":"",
      "content":"function isArguments(obj){\n  return toString.call(obj) === \"[object Arguments]\";\n}\n\n(function(){ return isArguments(arguments); })(1, 2, 3);\n// true\n\nisArguments([1,2,3]);\n// false"
   },
   { 
      "name":"isFunction",
      "description":"",
      "content":"function isFunction(obj){\n  return toString.call(obj) === \"[object Function]\";\n}\n\nisFunction(alert);\n// true"
   },
   { 
      "name":"isError",
      "description":"",
      "content":"function isError(obj){\n  return toString.call(obj) === \"[object Error]\";\n}\n\ntry {\n  throw new TypeError(\"Example\");\n} catch (o_O) {\n  isError(o_O);\n}\n// true"
   },
   { 
      "name":"isSymbol",
      "description":"",
      "content":"function isSymbol(obj){\n  return toString.call(obj) === \"[object Symbol]\";\n}\n\nisSymbol(Symbol());\n// true"
   },
   { 
      "name":"isMap",
      "description":"",
      "content":"function isMap(obj){\n  return toString.call(obj) === \"[object Map]\";\n}\n\nisMap(new Map());\n// true"
   },
   { 
      "name":"isWeakMap",
      "description":"",
      "content":"function isWeakMap(obj){\n  return toString.call(obj) === \"[object WeakMap]\";\n}\n\nisWeakMap(new WeakMap());\n// true"
   },
   { 
      "name":"isSet",
      "description":"",
      "content":"function isSet(obj){\n  return toString.call(obj) === \"[object Set]\";\n}\n\nisSet(new Set());\n// true"
   },
   { 
      "name":"isWeakSet",
      "description":"",
      "content":"function isWeakSet(obj){\n  return toString.call(obj) === \"[object WeakSet]\";\n}\n\nisWeakSet(new WeakSet());\n// true"
   },
   { 
      "name":"charCount",
      "description":"",
      "content":"function charCount(str){\n  var result = {};\n  for(var char of str){\n    if(isAlphaNumeric(char)){\n      char = char.toLowerCase();\n      result[char] = ++result[char] || 1;\n    }\n  }\n  return result\n}\n\nfunction isAlphaNumeric(str) {\n  var code = str.charCodeAt(0);\n  if (\n    !(code > 47 && code < 58) && // numeric (0-9)\n    !(code > 64 && code < 91) && // uppercase (A-Z)\n    !(code > 96 && code < 123)\n  ) {\n    // lowercase (a-z)\n    return false;\n  }\n  return true;\n}",
      "id":15
   }
]